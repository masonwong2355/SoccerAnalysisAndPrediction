from django.db import models
from django.contrib.auth.models import User
from logging import Filter


# Create your models here.
class Player(models.Model):
    player_id                   = models.CharField(max_length=30, default='')
    player_url                  = models.CharField(max_length=120, default='')
    short_name                  = models.CharField(max_length=30, default='')
    long_name                   = models.CharField(max_length=30, default='')
    age                         = models.IntegerField(default=0)
    dob                         = models.CharField(max_length=30, default='')
    height_cm                   = models.IntegerField(default=0)
    weight_kg                   = models.IntegerField(default=0)
    club_name                   = models.CharField(max_length=30, default='')
    nationality                 = models.CharField(max_length=30, default='')
    league_name                 = models.CharField(max_length=30, default='')
    league_rank                 = models.IntegerField(default=0)
    overall                     = models.IntegerField(default=0)
    potential                   = models.IntegerField(default=0)
    value_eur                   = models.IntegerField(default=0)
    wage_eur                    = models.IntegerField(default=0)
    player_positions            = models.CharField(max_length=30, default='')
    preferred_foot              = models.CharField(max_length=30, default='')
    international_reputation    = models.IntegerField(default=0)
    weak_foot                   = models.IntegerField(default=0)
    skill_moves                 = models.IntegerField(default=0)
    work_rate                   = models.CharField(max_length=30, default='')
    body_type                   = models.CharField(max_length=30, default='')
    real_face                   = models.CharField(max_length=30, default='')
    release_clause_eur          = models.IntegerField(default=0)
    player_tags                 = models.CharField(max_length=30, default='')
    team_position               = models.CharField(max_length=30, default='')
    team_jersey_number          = models.IntegerField(default=0)
    loaned_from                 = models.CharField(max_length=30, default='')
    joined                      = models.CharField(max_length=30, default='')
    contract_valid_until        = models.CharField(max_length=30, default=0)
    nation_position             = models.CharField(max_length=30, default='')
    nation_jersey_number        = models.IntegerField(default=0)
    pace                        = models.IntegerField(default=0)
    shooting                    = models.IntegerField(default=0)
    passing                     = models.IntegerField(default=0)
    dribbling                   = models.IntegerField(default=0)
    defending                   = models.IntegerField(default=0)
    physic                      = models.IntegerField(default=0)
    gk_diving                   = models.IntegerField(default=0)
    gk_handling                 = models.IntegerField(default=0)
    gk_kicking                  = models.IntegerField(default=0)
    gk_reflexes                 = models.IntegerField(default=0)
    gk_speed                    = models.IntegerField(default=0)
    gk_positioning              = models.IntegerField(default=0)
    player_traits               = models.CharField(max_length=30, default='')
    attacking_crossing          = models.IntegerField(default=0)
    attacking_finishing         = models.IntegerField(default=0)
    attacking_heading_accuracy  = models.IntegerField(default=0)
    attacking_short_passing     = models.IntegerField(default=0)
    attacking_volleys           = models.IntegerField(default=0)
    skill_dribbling             = models.IntegerField(default=0)
    skill_curve                 = models.IntegerField(default=0)
    skill_fk_accuracy           = models.IntegerField(default=0)
    skill_long_passing          = models.IntegerField(default=0)
    skill_ball_control          = models.IntegerField(default=0)
    movement_acceleration       = models.IntegerField(default=0)
    movement_sprint_speed       = models.IntegerField(default=0)
    movement_agility            = models.IntegerField(default=0)
    movement_reactions          = models.IntegerField(default=0)
    movement_balance            = models.IntegerField(default=0)
    power_shot_power            = models.IntegerField(default=0)
    power_jumping               = models.IntegerField(default=0)
    power_stamina               = models.IntegerField(default=0)
    power_strength              = models.IntegerField(default=0)
    power_long_shots            = models.IntegerField(default=0)
    mentality_aggression        = models.IntegerField(default=0)
    mentality_interceptions     = models.IntegerField(default=0)
    mentality_positioning       = models.IntegerField(default=0)
    mentality_vision            = models.IntegerField(default=0)
    mentality_penalties         = models.IntegerField(default=0)
    mentality_composure         = models.IntegerField(default=0)
    defending_marking           = models.IntegerField(default=0)
    defending_standing_tackle   = models.IntegerField(default=0)
    defending_sliding_tackle    = models.IntegerField(default=0)
    goalkeeping_diving          = models.IntegerField(default=0)
    goalkeeping_handling        = models.IntegerField(default=0)
    goalkeeping_kicking         = models.IntegerField(default=0)
    goalkeeping_positioning     = models.IntegerField(default=0)
    goalkeeping_reflexes        = models.IntegerField(default=0)
    ls                          = models.IntegerField(default=0)
    st                          = models.IntegerField(default=0)
    rs                          = models.IntegerField(default=0)
    lw                          = models.IntegerField(default=0)
    lf                          = models.IntegerField(default=0)
    cf                          = models.IntegerField(default=0)
    rf                          = models.IntegerField(default=0)
    rw                          = models.IntegerField(default=0)
    lam                         = models.IntegerField(default=0)
    cam                         = models.IntegerField(default=0)
    ram                         = models.IntegerField(default=0)
    lm                          = models.IntegerField(default=0)
    lcm                         = models.IntegerField(default=0)
    cm                          = models.IntegerField(default=0)
    rcm                         = models.IntegerField(default=0)
    rm                          = models.IntegerField(default=0)
    lwb                         = models.IntegerField(default=0)
    ldm                         = models.IntegerField(default=0)
    cdm                         = models.IntegerField(default=0)
    rwb                         = models.IntegerField(default=0)
    rdm                         = models.IntegerField(default=0)
    lb                          = models.IntegerField(default=0)
    lcb                         = models.IntegerField(default=0)
    cb                          = models.IntegerField(default=0)
    rcb                         = models.IntegerField(default=0)
    rb                          = models.IntegerField(default=0)   

    def __str__(self):
        return f"id: {self.id} player_id: {self.player_id} short_name: {self.short_name} club_name: {self.club_name}"

class SkipStaticFilter(Filter):
    """ Logging filter to skip logging of staticfiles to terminal """
    def filter(self, record):
        return not record.getMessage().startswith('GET /static/')

